name: Update theme

# curl -H "Accept: application/vnd.github.v3+json" \
#    -H "Authorization: token ..." \
#    --request POST \
#    --data '{"event_type": "fetch_latest_changes", "client_payload": { "site_template_version": "2.0.1" } }' \
#    https://api.github.com/repos/adobe/aem-site-template-basic-theme-e2e/dispatches

on:
  repository_dispatch:
    types: fetch_latest_changes

jobs:

  update:
    name: Update theme based on AEM Site Template Basic repo
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise GITHUB_TOKEN is used, instead of TOKEN_WITH_WORKFLOW_WRITE_PERMISSIONS
      
      - name: Compute env vars
        id: env_vars
        run: |
          echo ::set-output name=ZIP_PATH::$(echo "https://github.com/adobe/aem-site-template-basic/releases/download/v${{ github.event.client_payload.site_template_version }}/aem-site-template-basic-${{ github.event.client_payload.site_template_version }}.zip")
          echo ::set-output name=TAG_NAME::$(echo "site-theme-from-site-template-v${{ github.event.client_payload.site_template_version }}")
          echo ::set-output name=TAG_EXISTS::$(git show-ref --tags --verify --quiet -- "refs/tags/site-theme-from-site-template-v${{ github.event.client_payload.site_template_version }}" && echo "yes" || echo "no")

      - name: Print 'I do nothing' if tag exists
        if: steps.env_vars.outputs.TAG_EXISTS == 'yes'
        run: echo "Tag already exists. I do nothing."

      - name: Site Template – download and unzip
        if: steps.env_vars.outputs.TAG_EXISTS == 'no'
        run: |
          curl --location --output site-template-tmp/site-template.zip --create-dirs ${{ steps.env_vars.outputs.ZIP_PATH }}
          unzip site-template-tmp/site-template.zip -d site-template-tmp

      - name: Site Theme – unzip, copy into root (.github folder needs special treatment for unknown reasons) and then cleanup
        if: steps.env_vars.outputs.TAG_EXISTS == 'no'
        run: |
          unzip site-template-tmp/theme-sources.zip -d site-template-tmp/site-theme-sources
          cp -fr site-template-tmp/site-theme-sources/* ./
          cp -fr site-template-tmp/site-theme-sources/.github/* ./.github/ 
          ls -la
          rm -fr site-template-tmp

      - name: Commit site theme and create tag
        if: steps.env_vars.outputs.TAG_EXISTS == 'no'
        run: |
          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
          git config --local user.name "Release action on behalf of ${{ github.actor }}"
          git add --all
          git commit -am 'Commit ${{ steps.env_vars.outputs.TAG_NAME }}'
          git tag ${{ steps.env_vars.outputs.TAG_NAME }} -m "${{ steps.env_vars.outputs.TAG_NAME }}"

      - name: Push changes
        if: steps.env_vars.outputs.TAG_EXISTS == 'no'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.TOKEN_WITH_WORKFLOW_WRITE_PERMISSIONS }}
          branch: ${{ github.ref }}
          force: true # simple use "theirs" merge-conflict strategy
          tags: true
